---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: jellyfin
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: minio
      namespace: default
  values:
    controller:
      type: statefulset
    image:
      repository: ghcr.io/onedr0p/jellyfin
      tag: 10.8.11@sha256:041977cb09d964ed4e00dec2bd0af3208f0121b8385a69617d30657596ffa292
    env:
      TZ: ${TIMEZONE}
      JELLYFIN_PublishedServerUrl: "https://{{ .Release.Name }}.${SECRET_DOMAIN}/"
    service:
      main:
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: "${LB_JELLYFIN_ADDR}"
        externalTrafficPolicy: Local
        ports:
          http:
            port: 8096
          autodiscovery1:
            enabled: true
            port: 1900
            protocol: UDP
          autodiscovery2:
            enabled: true
            port: 7359
            protocol: UDP
    ingress:
      main:
        enabled: true
        ingressClassName: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          hajimari.io/icon: simple-icons:jellyfin
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups: [44, 107, 10000]
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 10Gi
        storageClass: nfs-fast
    persistence:
      movies:
        enabled: true
        type: nfs
        server: nova.home.arpa
        path: /movies
        mountPath: /data/movies
        readOnly: true
      music:
        enabled: true
        type: nfs
        server: nova.home.arpa
        path: /music
        mountPath: /data/music
        readOnly: true
      series:
        enabled: true
        type: nfs
        server: nova.home.arpa
        path: /series
        mountPath: /data/tvshows
        readOnly: true
      transcodes:
        enabled: true
        type: emptyDir
        mountPath: /config/transcodes
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            # - matchExpressions:
            #     - key: feature.node.kubernetes.io/pci-0300_1002.present
            #       operator: In
            #       values:
            #         - "true"
            - matchExpressions:
                - key: node.home.arpa/type
                  operator: NotIn
                  values:
                    - "transient"
    resources:
      requests:
        # amd.com/gpu: 1
        cpu: 100m
        memory: 1Gi
      limits:
        # amd.com/gpu: 1
        memory: 4Gi
