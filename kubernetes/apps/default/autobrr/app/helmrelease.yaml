---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: autobrr
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: ghcr.io/autobrr/autobrr
              tag: v1.34.1@sha256:7a21e928f9e6fe608c99ea01714cd261f093adc640cb104848651a264cb490b2
            env:
              TZ: ${TIMEZONE}
              AUTOBRR__DATABASE_TYPE: postgres
              AUTOBRR__POSTGRES_HOST: &ps-host postgres-rw.default.svc.cluster.local
              AUTOBRR__POSTGRES_PORT: "5432"
              AUTOBRR__HOST: 0.0.0.0
              AUTOBRR__PORT: &port 80
              AUTOBRR__CHECK_FOR_UPDATES: "false"
              AUTOBRR__LOG_LEVEL: DEBUG
            envFrom:
              - secretRef:
                  name: autobrr-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/healthz/liveness
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
              limits:
                memory: 256Mi
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 14.8@sha256:dfddde81c0d49da09da1e893c95c32934333baba60edde707be5010dc3baa4c2
            env:
              - name: INIT_POSTGRES_HOST
                value: *ps-host
              - name: INIT_POSTGRES_SUPER_USER
                valueFrom:
                  secretKeyRef:
                    name: postgres-secret
                    key: username
              - name: INIT_POSTGRES_SUPER_PASS
                valueFrom:
                  secretKeyRef:
                    name: postgres-secret
                    key: password
              - name: INIT_POSTGRES_USER
                valueFrom:
                  secretKeyRef:
                    name: autobrr-secret
                    key: AUTOBRR__POSTGRES_USER
              - name: INIT_POSTGRES_PASS
                valueFrom:
                  secretKeyRef:
                    name: autobrr-secret
                    key: AUTOBRR__POSTGRES_PASS
              - name: INIT_POSTGRES_DBNAME
                valueFrom:
                  secretKeyRef:
                    name: autobrr-secret
                    key: AUTOBRR__POSTGRES_DATABASE
        pod:
          podSecurityContext:
            runAsUser: 568
            runAsGroup: 568
            runAsNonRoot: true
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
    service:
      main:
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        className: internal
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: "/"
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
