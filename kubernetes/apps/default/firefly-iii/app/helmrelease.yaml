---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: firefly-iii
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    image:
      repository: fireflyiii/core
      tag: version-6@sha256:b8ff2fe81270dfff32ae9ef76504a51e9597c7a65efa6868c4ceceb1e192346f
    env:
      TZ: ${TIMEZONE}
      DB_CONNECTION: pgsql
      DB_HOST: postgres-rw.default.svc.cluster.local
      DB_PORT: "5432"
      DEFAULT_LANGUAGE: en_CA
      DEFAULT_LOCALE: equal
      TRUSTED_PROXIES: "**"
      APP_URL: "https://firefly-iii.${SECRET_DOMAIN}"
      AUTHENTICATION_GUARD: remote_user_guard
      AUTHENTICATION_GUARD_HEADER: HTTP_REMOTE_USER
      AUTHENTICATION_GUARD_EMAIL: HTTP_REMOTE_EMAIL
    envFrom:
      - secretRef:
          name: firefly-iii-credentials
    service:
      main:
        ports:
          http:
            port: &port 8080
    ingress:
      main:
        enabled: true
        ingressClassName: external
        annotations:
          auth.home.arpa/enabled: "true"
        hosts:
          - host: &host "firefly-iii.${SECRET_DOMAIN}"
            paths:
              - path: "/"
                pathType: Prefix
        tls:
          - hosts:
              - *host
      api:
        enabled: true
        ingressClassName: external
        hosts:
          - host: &host "firefly-iii.${SECRET_DOMAIN}"
            paths:
              - path: "/api"
                pathType: Prefix
        tls:
          - hosts:
              - *host
    persistence:
      upload:
        enabled: true
        type: pvc
        storageClass: nfs-slow
        accessMode: ReadWriteOnce
        size: 2Gi
        retain: true
        mountPath: /var/www/html/storage/upload
    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec: &probes-spec
          httpGet:
            path: /health
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: true
        custom: true
        spec:
          <<: *probes-spec
          failureThreshold: 30
    resources:
      requests:
        cpu: 10m
        memory: 250Mi
      limits:
        memory: 2Gi
