---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: audiobookshelf
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        statefulset:
          volumeClaimTemplates:
            - name: config
              mountPath: /config
              accessMode: ReadWriteMany
              size: 5Gi
              storageClass: nfs-fast
        containers:
          main:
            image:
              repository: ghcr.io/advplyr/audiobookshelf
              tag: 2.7.1@sha256:78506de0bca185f0f396922dcdbd1badb795b0aa6ac2a5275c76b29f54131a07
            env:
              TZ: "${TIMEZONE}"
              AUDIOBOOKSHELF_UID: 568
              AUDIOBOOKSHELF_GID: 568
              CONFIG_PATH: /config
              METADATA_PATH: /config/metadata
            envFrom:
              - secretRef:
                  name: audiobookshelf-secret
            resources:
              requests:
                cpu: 50m
                memory: 100Mi
              limits:
                memory: 500Mi
            securityContext:
              runAsUser: 568
              runAsGroup: 568
              fsGroup: 568
              fsGroupChangePolicy: "OnRootMismatch"
    service:
      main:
        ports:
          http:
            port: 80
    ingress:
      main:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      ebooks:
        enabled: true
        type: nfs
        server: nova.home.arpa
        path: /books/ebooks
        globalMounts:
          - path: /media/ebooks
      audiobooks:
        enabled: true
        type: nfs
        server: nova.home.arpa
        path: /books/audio
        globalMounts:
          - path: /media/audiobooks
      podcasts:
        enabled: true
        type: nfs
        server: nova.home.arpa
        path: /podcasts
        globalMounts:
          - path: /media/podcasts
      cache:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /.npm
