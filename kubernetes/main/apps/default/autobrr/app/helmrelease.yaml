---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: autobrr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: ghcr.io/autobrr/autobrr
              tag: v1.42.0@sha256:c38f2d0f31a63b98285049524115b238dbb9f1a39d5f60269dd8e9a19de7ebae
            env:
              AUTOBRR__DATABASE_TYPE: postgres
              AUTOBRR__POSTGRES_HOST: &ps-host postgres-rw.default.svc.cluster.local
              AUTOBRR__POSTGRES_PORT: "5432"
              AUTOBRR__HOST: 0.0.0.0
              AUTOBRR__PORT: &port 80
              AUTOBRR__CHECK_FOR_UPDATES: "false"
              AUTOBRR__LOG_LEVEL: DEBUG
            envFrom:
              - secretRef:
                  name: autobrr-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/healthz/liveness
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
              limits:
                memory: 256Mi
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 14.10@sha256:71ddc70edccf201d6a521fe6216bc58d8c7c856a1ef96c4d4fbe9f548818ea4d
            env:
              - name: INIT_POSTGRES_HOST
                value: *ps-host
              - name: INIT_POSTGRES_SUPER_USER
                valueFrom:
                  secretKeyRef:
                    name: postgres-secret
                    key: username
              - name: INIT_POSTGRES_SUPER_PASS
                valueFrom:
                  secretKeyRef:
                    name: postgres-secret
                    key: password
              - name: INIT_POSTGRES_USER
                valueFrom:
                  secretKeyRef:
                    name: autobrr-secret
                    key: AUTOBRR__POSTGRES_USER
              - name: INIT_POSTGRES_PASS
                valueFrom:
                  secretKeyRef:
                    name: autobrr-secret
                    key: AUTOBRR__POSTGRES_PASS
              - name: INIT_POSTGRES_DBNAME
                valueFrom:
                  secretKeyRef:
                    name: autobrr-secret
                    key: AUTOBRR__POSTGRES_DATABASE
    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        runAsNonRoot: true
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
    service:
      main:
        primary: true
        controller: main
        ports:
          http:
            primary: true
            port: *port
    ingress:
      main:
        className: internal
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: "/"
                pathType: Prefix
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      tmp:
        type: emptyDir
