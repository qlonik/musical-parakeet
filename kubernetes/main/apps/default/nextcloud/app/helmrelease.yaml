---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: nextcloud
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: nextcloud
      version: 5.5.2
      sourceRef:
        kind: HelmRepository
        name: nextcloud
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: authelia
      namespace: default
    - name: redis-lb
      namespace: default
    - name: glauth
      namespace: default
  values:
    nextcloud:
      host: &host "cloud.${SECRET_DOMAIN}"
      existingSecret:
        enabled: true
        secretName: nextcloud-secret
      mail:
        enabled: true
        fromAddress: nextcloud
        domain: "${SECRET_DOMAIN}"
        smtp:
          port: 2525
          secure: ""
      configs:
        main-config.config.php: |
          <?php
          $CONFIG = array (
            'passwordsalt' => getenv('PASSWORD_SALT'),
            'secret' => getenv('SECRET'),
            'instanceid' => getenv('INSTANCE_ID'),
            'updater.secret' => getenv('UPDATER_SECRET'),
            'trusted_domains' => array (
              0 => 'localhost',
              1 => getenv('NEXTCLOUD_TRUSTED_DOMAINS'),
            ),
            'overwrite.cli.url' => 'https://' . getenv('NEXTCLOUD_TRUSTED_DOMAINS'),
            'ldapProviderFactory' => 'OCA\\User_LDAP\\LDAPProviderFactory',
            'hide_login_form' => true,
          );
        reverse-proxy.config.php: |
          <?php
          $CONFIG = array (
            'trusted_proxies' => array (
              0 => '127.0.0.1',
              1 => '${CLUSTER_CIDR}',
              2 => '${SERVICE_CIDR}',
            ),
            'forwarded_for_headers' => array('HTTP_X_FORWARDED_FOR'),
            'overwriteprotocol' => 'https',
            'overwritehost' => getenv('NEXTCLOUD_TRUSTED_DOMAINS'),
          );
        oidc-login.config.php: |
          <?php
          $CONFIG = array (
            'allow_user_to_change_display_name' => false,
            'lost_password_link' => 'disabled',
            'oidc_login_provider_url' => 'https://auth.${SECRET_DOMAIN}',
            'oidc_login_client_id' => getenv('OIDC_CLIENT_ID'),
            'oidc_login_client_secret' => getenv('OIDC_CLIENT_SECRET'),
            'oidc_login_button_text' => 'Log in with Authelia',
            'oidc_login_hide_password_form' => true,
            'oidc_login_use_id_token' => true,
            'oidc_login_attributes' => array (
              'id' => 'preferred_username',
              'name' => 'name',
              'mail' => 'email',
              'groups' => 'groups',
            ),
            'oidc_login_scope' => 'openid profile email groups',
          );
      extraEnv:
        - name: APACHE_DISABLE_REWRITE_IP
          value: "1"
        - name: REDIS_HOST
          valueFrom:
            secretKeyRef:
              name: nextcloud-secret
              key: REDIS_HOST
        - name: REDIS_HOST_PORT
          valueFrom:
            secretKeyRef:
              name: nextcloud-secret
              key: REDIS_PORT
        - name: REDIS_HOST_PASSWORD
          valueFrom:
            secretKeyRef:
              name: nextcloud-secret
              key: REDIS_PASSWORD
        - name: PASSWORD_SALT
          valueFrom:
            secretKeyRef:
              name: nextcloud-secret
              key: PASSWORD_SALT
        - name: SECRET
          valueFrom:
            secretKeyRef:
              name: nextcloud-secret
              key: SECRET
        - name: INSTANCE_ID
          valueFrom:
            secretKeyRef:
              name: nextcloud-secret
              key: INSTANCE_ID
        - name: UPDATER_SECRET
          valueFrom:
            secretKeyRef:
              name: nextcloud-secret
              key: UPDATER_SECRET
        - name: OIDC_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: nextcloud-secret
              key: OIDC_CLIENT_ID
        - name: OIDC_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: nextcloud-secret
              key: OIDC_CLIENT_SECRET
      extraInitContainers:
        - name: init-db
          image: ghcr.io/onedr0p/postgres-init:16.3@sha256:8ba3204f6b293dd168766009aae2ce4fa986a29b931c2d30ac1b30238ac750b8
          envFrom:
            - secretRef:
                name: nextcloud-secret
    persistence:
      enabled: true
      existingClaim: nextcloud-main
      nextcloudData:
        enabled: true
        existingClaim: nextcloud-data
    internalDatabase:
      enabled: false
    externalDatabase:
      enabled: true
      type: postgresql
      existingSecret:
        enabled: true
        secretName: nextcloud-secret
        hostKey: INIT_POSTGRES_HOST
        usernameKey: INIT_POSTGRES_USER
        passwordKey: INIT_POSTGRES_PASS
        databaseKey: INIT_POSTGRES_DBNAME
    redis:
      enabled: false
    cronjob:
      enabled: true
    startupProbe:
      enabled: true
      failureThreshold: 90
    ingress:
      enabled: true
      className: external
      annotations:
        external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        # Can re-enable if https://github.com/nextcloud/helm/issues/410 is resolved
        nginx.ingress.kubernetes.io/enable-cors: "false"
        nginx.ingress.kubernetes.io/cors-allow-methods: |-
          GET,PUT,POST,DELETE,PATCH,OPTIONS,HEAD,CONNECT,PROPFIND,PROPPATCH,MKCOL,COPY,MOVE,LOCK,UNLOCK,TRACE
        nginx.ingress.kubernetes.io/cors-allow-headers: "X-Forwarded-For"
        nginx.ingress.kubernetes.io/proxy-body-size: 4G
        nginx.ingress.kubernetes.io/server-snippet: |
          server_tokens off;
          proxy_hide_header X-Powered-By;

          # Rule borrowed from .htaccess to handle Microsoft DAV clients
          location = / {
            if ( $http_user_agent ~ ^DavClnt ) {
              return 302 /remote.php/webdav/$is_args$args;
            }
          }

          rewrite   ^/.well-known/webfinger       /index.php/.well-known/webfinger last;
          rewrite   ^/.well-known/nodeinfo        /index.php/.well-known/nodeinfo last;
          rewrite   ^/.well-known/host-meta       /public.php?service=host-meta last;
          rewrite   ^/.well-known/host-meta.json  /public.php?service=host-meta-json;
          location = /.well-known/carddav         { return 301 $scheme://$host/remote.php/dav; }
          location = /.well-known/caldav          { return 301 $scheme://$host/remote.php/dav; }

          location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
          }
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
          }
          location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
            deny all;
          }
        gethomepage.dev/enabled: "true"
        gethomepage.dev/name: Nextcloud
        gethomepage.dev/icon: nextcloud.svg
        gethomepage.dev/description: Personal cloud
        gethomepage.dev/group: Various
        gethomepage.dev/siteMonitor: &externalUrl "https://cloud.${SECRET_DOMAIN}"
        gethomepage.dev/widget.type: nextcloud
        gethomepage.dev/widget.url: *externalUrl
        gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_NEXTCLOUD_API_TOKEN}}` }}"
      tls:
        - hosts:
            - *host
