---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: home-assistant
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: longhorn
      namespace: storage
    - name: volsync
      namespace: storage
  values:
    controllers:
      home-assistant:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/home-assistant
              tag: 2024.9.1@sha256:6caa7e18827b65de1d0b1055d7e0a4f8d20598cd8ea40a480629fe9d493da7a6
            args:
              - "/entrypoint.sh"
              - "--log-file"
              - "/config/logs/home-assistant.log"
            env:
              TZ: ${TIMEZONE}
              HOME_ASSISTANT__HACS_INSTALL: "true"
              HASS_HTTP_TRUSTED_PROXY_1: 10.42.0.0/16
              HASS_HTTP_TRUSTED_PROXY_2: 10.43.0.0/16
            envFrom: &envFrom
              - secretRef:
                  name: home-assistant-secret
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 250Mi
              limits:
                memory: 2Gi
          code-server:
            image:
              repository: ghcr.io/coder/code-server
              tag: 4.92.2@sha256:f32cfa5e7cc768f60969f1d2183fc4c7aa093b80b93c365535e83f79ccf004f2
            # prettier-ignore
            args: [
              "--auth", "none",
              "--user-data-dir", "/config/.vscode/user-data",
              "--extensions-dir", "/config/.vscode/extensions",
              "--port", "12321",
              "/config"
            ]
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 512Mi
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.3@sha256:9cc2856e3bd5e6100dca9123aae7b6dc9c2f8b7d5a0eab00aad0c2fed5355c93
            envFrom: *envFrom
    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        runAsNonRoot: true
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"
        seccompProfile: { type: RuntimeDefault }
    service:
      main:
        controller: home-assistant
        ports:
          http:
            port: 8123
          code-server:
            port: 12321
    ingress:
      main:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: Home assistant
          gethomepage.dev/icon: home-assistant.svg
          gethomepage.dev/group: Various
          gethomepage.dev/siteMonitor: &internalUrl "http://{{ .Release.Name }}.default.svc.cluster.local:8123"
          gethomepage.dev/widget.type: homeassistant
          gethomepage.dev/widget.url: *internalUrl
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_HASS_ACCESS_TOKEN}}` }}"
          gethomepage.dev/pod-selector: >-
            app.kubernetes.io/instance in (home-assistant)
        hosts:
          - host: &host "hass.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - *host
      code-server:
        className: internal
        hosts:
          - host: &host "hass-code.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: code-server
        tls:
          - hosts:
              - *host
    persistence:
      config:
        type: persistentVolumeClaim
        existingClaim: home-assistant
        globalMounts:
          - path: /config
      logs:
        type: emptyDir
        globalMounts:
          - path: /config/logs
      tts:
        type: emptyDir
        globalMounts:
          - path: /config/tts
      tmp:
        type: emptyDir
        globalMounts:
          - path: /tmp
