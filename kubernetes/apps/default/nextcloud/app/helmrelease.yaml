---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: nextcloud
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: nextcloud
      version: 3.3.6
      sourceRef:
        kind: HelmRepository
        name: nextcloud
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    image:
      repository: docker.io/library/nextcloud
      tag: 24.0.8-apache@sha256:c50a0505935f36ce2ef96b668b4ea95045713b40823e6b640f2116feb2de8656
    nextcloud:
      host: &host "cloud.${SECRET_DOMAIN}"
      existingSecret:
        enabled: true
        secretName: nextcloud-credentials
        usernameKey: NEXTCLOUD_USERNAME
        passwordKey: NEXTCLOUD_PASSWORD
      extraEnv:
        - name: APACHE_DISABLE_REWRITE_IP
          value: "1"
        - name: PASSWORD_SALT
          valueFrom:
            secretKeyRef:
              name: nextcloud-credentials
              key: PASSWORD_SALT
        - name: SECRET
          valueFrom:
            secretKeyRef:
              name: nextcloud-credentials
              key: SECRET
        - name: INSTANCE_ID
          valueFrom:
            secretKeyRef:
              name: nextcloud-credentials
              key: INSTANCE_ID
        - name: UPDATER_SECRET
          valueFrom:
            secretKeyRef:
              name: nextcloud-credentials
              key: UPDATER_SECRET
    persistence:
      enabled: true
      existingClaim: nextcloud-main
      nextcloudData:
        enabled: true
        existingClaim: nextcloud-data
    internalDatabase:
      enabled: false
    externalDatabase:
      enabled: true
      type: postgresql
      host: postgres-rw.default.svc.cluster.local
      database: nextcloud
      existingSecret:
        enabled: true
        secretName: nextcloud-credentials
        usernameKey: POSTGRES_USERNAME
        passwordKey: POSTGRES_PASSWORD
    redis:
      enabled: true
    cronjob:
      enabled: false
    startupProbe:
      enabled: true
      initialDelaySeconds: 60
    ingress:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-production"
        external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
        external-dns/is-public: "true"
        nginx.ingress.kubernetes.io/proxy-body-size: 4G
        nginx.ingress.kubernetes.io/enable-global-auth: "false"
        nginx.ingress.kubernetes.io/enable-cors: "true"
        nginx.ingress.kubernetes.io/cors-allow-headers: "X-Forwarded-For"
        nginx.ingress.kubernetes.io/server-snippet: |-
          server_tokens off;
          proxy_hide_header X-Powered-By;

          # Rule borrowed from .htaccess to handle Microsoft DAV clients
          location = / {
            if ( $http_user_agent ~ ^DavClnt ) {
              return 302 /remote.php/webdav/$is_args$args;
            }
          }

          location = /robots.txt {
              allow all;
              log_not_found off;
              access_log off;
          }

          location ^~ /.well-known {

            # The rules in this block are an adaptation of the rules
            # in .htaccess that concern /.well-known.

            location = /.well-known/carddav { return 301 /remote.php/dav/; }
            location = /.well-known/caldav  { return 301 /remote.php/dav/; }

            location /.well-known/acme-challenge    { try_files $uri $uri/ =404; }
            location /.well-known/pki-validation    { try_files $uri $uri/ =404; }

            # Let Nextcloud's API for /.well-known URIs handle all other
            # requests by passing them to the front-end controller.
            return 301 /index.php$request_uri;
          }

          # Rules borrowed from .htaccess to hide certain paths from clients
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
          }
          location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
            deny all;
          }

          # Rule borrowed from .htaccess
          #location /remote {
          #    return 301 /remote.php$request_uri;
          #}
      tls:
        - hosts:
            - *host
          secretName: "nextcloud-tls"
