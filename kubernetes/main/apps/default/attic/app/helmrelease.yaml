---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: attic
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: minio
      namespace: default
  values:
    controllers:
      attic:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: ghcr.io/zhaofengli/attic
              tag: latest@sha256:309264ff35f2f7cbcb6609c72d816cb41ee62c74d59d4f01cfc05e94a893dae7
            args:
              - --config
              - /config/server.toml
              - --mode
              - api-server
            envFrom: &envFrom
              - secretRef:
                  name: attic-credentials
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 5m
                memory: 10Mi
              limits:
                memory: 100Mi
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 14.10@sha256:71ddc70edccf201d6a521fe6216bc58d8c7c856a1ef96c4d4fbe9f548818ea4d
            envFrom: *envFrom
          db-migrations:
            dependsOn:
              - init-db
            image:
              repository: ghcr.io/zhaofengli/attic
              tag: latest@sha256:309264ff35f2f7cbcb6609c72d816cb41ee62c74d59d4f01cfc05e94a893dae7
            args:
              - --config
              - /config/server.toml
              - --mode
              - db-migrations
            envFrom: *envFrom
          minio-init-bucket:
            image:
              repository: ghcr.io/qlonik/minio-init-bucket
              tag: RELEASE.2024-05-09T17-04-24Z@sha256:01a6c837c0d9bf505f190e18b331f4ee2502e76096648eb54bee6ccbe993c196
            envFrom: *envFrom
      gc-cronjob:
        type: cronjob
        cronjob:
          schedule: "@daily"
          timeZone: "${TIMEZONE}"
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: ghcr.io/zhaofengli/attic
              tag: latest@sha256:309264ff35f2f7cbcb6609c72d816cb41ee62c74d59d4f01cfc05e94a893dae7
            args:
              - --config
              - /config/server.toml
              - --mode
              - garbage-collector-once
            envFrom: *envFrom
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 10Mi
              limits:
                memory: 50Mi
    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        runAsNonRoot: true
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
    service:
      main:
        controller: attic
        primary: true
        ports:
          http:
            primary: true
            port: 8080
    ingress:
      main:
        className: internal
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        type: configMap
        name: attic-config
        globalMounts:
          - path: /config/server.toml
            subPath: server.toml
            readOnly: true
