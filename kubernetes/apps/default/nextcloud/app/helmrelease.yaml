---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: nextcloud
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: nextcloud
      version: 3.5.19
      sourceRef:
        kind: HelmRepository
        name: nextcloud
        namespace: flux-system
  maxHistory: 3
  timeout: 15m
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: authelia
      namespace: default
    - name: minio
      namespace: default
    - name: redis-lb
      namespace: default
  values:
    nextcloud:
      host: &host "cloud.${SECRET_DOMAIN}"
      existingSecret:
        enabled: true
        secretName: nextcloud-credentials
        usernameKey: NEXTCLOUD_USERNAME
        passwordKey: NEXTCLOUD_PASSWORD
        smtpUsernameKey: SMTP_USERNAME
        smtpPasswordKey: SMTP_PASSWORD
      mail:
        enabled: true
        fromAddress: nextcloud
        domain: "${SECRET_DOMAIN}"
        smtp:
          host: smtp-relay.default.svc.cluster.local
          port: 2525
          secure: ""
      extraEnv:
        - name: APACHE_DISABLE_REWRITE_IP
          value: "1"
        - name: REDIS_HOST
          value: redis-lb.default.svc.cluster.local
        - name: REDIS_HOST_PORT
          value: "6379"
        - name: REDIS_HOST_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-credentials
              key: redis-password
        - name: PASSWORD_SALT
          valueFrom:
            secretKeyRef:
              name: nextcloud-credentials
              key: PASSWORD_SALT
        - name: SECRET
          valueFrom:
            secretKeyRef:
              name: nextcloud-credentials
              key: SECRET
        - name: INSTANCE_ID
          valueFrom:
            secretKeyRef:
              name: nextcloud-credentials
              key: INSTANCE_ID
        - name: UPDATER_SECRET
          valueFrom:
            secretKeyRef:
              name: nextcloud-credentials
              key: UPDATER_SECRET
    persistence:
      enabled: true
      existingClaim: nextcloud-main
      nextcloudData:
        enabled: true
        existingClaim: nextcloud-data
    internalDatabase:
      enabled: false
    externalDatabase:
      enabled: true
      type: postgresql
      host: postgres-rw.default.svc.cluster.local
      database: nextcloud
      existingSecret:
        enabled: true
        secretName: nextcloud-credentials
        usernameKey: POSTGRES_USERNAME
        passwordKey: POSTGRES_PASSWORD
    redis:
      enabled: false
    cronjob:
      enabled: true
    startupProbe:
      enabled: true
      failureThreshold: 90
    ingress:
      enabled: true
      className: nginx
      annotations:
        external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
        nginx.ingress.kubernetes.io/enable-cors: "true"
        nginx.ingress.kubernetes.io/cors-allow-headers: "X-Forwarded-For"
        nginx.ingress.kubernetes.io/proxy-body-size: 4G
        nginx.ingress.kubernetes.io/server-snippet: |-
          server_tokens off;
          proxy_hide_header X-Powered-By;

          # Rule borrowed from .htaccess to handle Microsoft DAV clients
          location = / {
            if ( $http_user_agent ~ ^DavClnt ) {
              return 302 /remote.php/webdav/$is_args$args;
            }
          }

          rewrite   ^/.well-known/webfinger       /index.php/.well-known/webfinger last;
          rewrite   ^/.well-known/nodeinfo        /index.php/.well-known/nodeinfo last;
          rewrite   ^/.well-known/host-meta       /public.php?service=host-meta last;
          rewrite   ^/.well-known/host-meta.json  /public.php?service=host-meta-json;
          location = /.well-known/carddav         { return 301 $scheme://$host/remote.php/dav; }
          location = /.well-known/caldav          { return 301 $scheme://$host/remote.php/dav; }

          location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
          }
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
          }
          location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
            deny all;
          }
      tls:
        - hosts:
            - *host
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: node.home.arpa/type
                  operator: NotIn
                  values:
                    - "transient"
