---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: sonarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      sonarr:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/sonarr
              tag: 4.0.12.2823@sha256:f453b589cd553e09244b2fb48d74ae4047e6fab1fa837e008755be1200a62407
            env:
              TZ: ${TIMEZONE}
              SONARR__APP__INSTANCENAME: Sonarr
              SONARR__APP__LAUNCHBROWSER: "False"
              SONARR__APP__THEME: dark
              SONARR__AUTH__METHOD: External
              SONARR__AUTH__REQUIRED: DisabledForLocalAddresses
              SONARR__LOG__ANALYTICSENABLED: "False"
              SONARR__LOG__DBENABLED: "False"
              SONARR__LOG__LEVEL: info
            envFrom: &envFrom
              - secretRef:
                  name: sonarr-secret
            resources:
              requests:
                cpu: 10m
                memory: 250Mi
              limits:
                memory: 2Gi
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.6@sha256:5c98db91663fa586c4905a0c91ab4159e6a5e9a8718cf2cb1e82c9d510392498
            envFrom: *envFrom
    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"
    service:
      main:
        controller: sonarr
        ports:
          http:
            port: 8989
    ingress:
      main:
        className: internal
        annotations:
          auth.home.arpa/enabled: "true"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: Sonarr
          gethomepage.dev/icon: sonarr.svg
          gethomepage.dev/description: Shows management
          gethomepage.dev/group: Media Mgmt
          gethomepage.dev/siteMonitor: &internalUrl "http://{{ .Release.Name }}.default.svc.cluster.local:8989"
          gethomepage.dev/widget.type: sonarr
          gethomepage.dev/widget.url: *internalUrl
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_SONARR_API_KEY}}` }}"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: "/"
                pathType: Prefix
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        type: persistentVolumeClaim
        existingClaim: sonarr-conf
        advancedMounts:
          sonarr:
            main:
              - path: /config
      series:
        type: nfs
        server: nova.home.arpa
        path: /mnt/main/media/series
        globalMounts:
          - path: /media/series
      downloads:
        type: nfs
        server: nova.home.arpa
        path: /mnt/main/media/downloads
        globalMounts:
          - path: /media/downloads
