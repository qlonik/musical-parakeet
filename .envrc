#!/usr/bin/env bash
#shellcheck disable=SC2148,SC2155

if has use_nix_direnv; then
  use nix_direnv
else
  log_status ""
  log_status "WARNING: cannot detect installed nix-direnv, so we might be using an outdated"
  log_status "  version. Install nix-direnv for the current user by creating a bash function"
  log_status "  \"use_nix_direnv\" in the file \"\$HOME/.config/direnv/lib/use_nix_direnv.sh\"."
  log_status "  The body of the function should be the code shown on the nix-direnv page:"
  log_status "      https://github.com/nix-community/nix-direnv#direnv-source_url"
  log_status ""

  if ! has nix_direnv_version || ! nix_direnv_version 2.2.0; then
    source_url "https://raw.githubusercontent.com/nix-community/nix-direnv/2.2.0/direnvrc" "sha256-5EwyKnkJNQeXrRkYbwwRBcXbibosCJqyIUuz9Xq+LRc="
  fi
fi

use flake

export KUBECONFIG=$(expand_path ./kubeconfig)
export ANSIBLE_CONFIG=$(expand_path ./ansible.cfg)
export ANSIBLE_HOST_KEY_CHECKING="False"
export K8S_AUTH_KUBECONFIG=$(expand_path ./kubeconfig)
export SOPS_AGE_KEY_FILE=$(expand_path ~/.config/sops/age/keys.txt)
