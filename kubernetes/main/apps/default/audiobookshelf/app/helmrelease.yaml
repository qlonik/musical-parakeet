---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: audiobookshelf
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      audiobookshelf:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: ghcr.io/advplyr/audiobookshelf
              tag: 2.16.2@sha256:acfda2baa0dce0c7a31e1703b8cd694e59cd3f3de9cfabe5b7e9dd2029896169
            env:
              TZ: "${TIMEZONE}"
              AUDIOBOOKSHELF_UID: 568
              AUDIOBOOKSHELF_GID: 568
              CONFIG_PATH: /config
              METADATA_PATH: /config/metadata
            envFrom:
              - secretRef:
                  name: audiobookshelf-secret
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            securityContext:
              runAsUser: 568
              runAsGroup: 568
              fsGroup: 568
              fsGroupChangePolicy: "OnRootMismatch"
            resources:
              requests:
                cpu: 50m
                memory: 100Mi
              limits:
                memory: 500Mi
    service:
      main:
        controller: audiobookshelf
        primary: true
        ports:
          http:
            primary: true
            port: 80
    ingress:
      main:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: Audiobookshelf
          gethomepage.dev/icon: audiobookshelf.svg
          gethomepage.dev/description: Audiobooks, podcasts and e-books
          gethomepage.dev/group: Media
          gethomepage.dev/siteMonitor: &internalUrl "http://{{ .Release.Name }}.default.svc.cluster.local"
          gethomepage.dev/widget.type: audiobookshelf
          gethomepage.dev/widget.fields: |-
            ["books", "podcasts"]
          gethomepage.dev/widget.url: *internalUrl
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_AUDIOBOOKSHELF_API_TOKEN}}` }}"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        # stateful data
        type: persistentVolumeClaim
        existingClaim: audiobookshelf-conf
        advancedMounts:
          audiobookshelf:
            main:
              - path: /config
      ebooks:
        type: nfs
        server: nova.home.arpa
        path: /mnt/main/media/ebooks
        globalMounts:
          - path: /media/ebooks
      audiobooks:
        type: nfs
        server: nova.home.arpa
        path: /mnt/main/media/audiobooks
        globalMounts:
          - path: /media/audiobooks
      podcasts:
        type: nfs
        server: nova.home.arpa
        path: /mnt/main/media/podcasts
        globalMounts:
          - path: /media/podcasts
      cache:
        type: emptyDir
        globalMounts:
          - path: /.npm
