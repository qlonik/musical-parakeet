---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: jellyfin
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: glauth
      namespace: default
  values:
    controllers:
      jellyfin:
        type: statefulset
        containers:
          main:
            image:
              repository: docker.io/jellyfin/jellyfin
              tag: 10.9.8@sha256:836232f7ffa1fdac5d043a592806422c33c68da2616f303f831e3ac25bfb6f1a
            env:
              TZ: ${TIMEZONE}
              JELLYFIN_PublishedServerUrl: "https://{{ .Release.Name }}.${SECRET_DOMAIN}/"
            resources:
              requests:
                gpu.intel.com/i915: 1
                cpu: 100m
                memory: 1Gi
              limits:
                gpu.intel.com/i915: 1
                memory: 4Gi
        pod:
          nodeSelector:
            intel.feature.node.kubernetes.io/gpu: "true"
    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"
        supplementalGroups: [44, 105, 10000]
    service:
      main:
        controller: jellyfin
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: "${LB_JELLYFIN_ADDR}"
        externalTrafficPolicy: Local
        ports:
          http:
            primary: true
            port: 8096
          autodiscovery1:
            port: 1900
            protocol: UDP
          autodiscovery2:
            port: 7359
            protocol: UDP
    ingress:
      main:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: Jellyfin
          gethomepage.dev/icon: jellyfin.svg
          gethomepage.dev/description: Movies and Shows
          gethomepage.dev/group: Media
          gethomepage.dev/siteMonitor: &internalUrl "http://{{ .Release.Name }}.default.svc.cluster.local:8096"
          gethomepage.dev/widget.type: jellyfin
          gethomepage.dev/widget.url: *internalUrl
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_JELLYFIN_API_KEY}}` }}"
          gethomepage.dev/widget.enableBlocks: "true"
          gethomepage.dev/widget.enableNowPlaying: "true"
          gethomepage.dev/widget.enableUser: "true"
          gethomepage.dev/widget.showEpisodeNumber: "true"
          gethomepage.dev/widget.expandOneStreamToTwoRows: "false"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        # stateful data
        type: persistentVolumeClaim
        existingClaim: jellyfin-conf
        advancedMounts:
          jellyfin:
            main:
              - path: /config
      movies:
        type: nfs
        server: nova.home.arpa
        path: /mnt/main/media/movies
        globalMounts:
          - path: /data/movies
            readOnly: true
      music:
        type: nfs
        server: nova.home.arpa
        path: /mnt/main/media/music
        globalMounts:
          - path: /data/music
            readOnly: true
      series:
        type: nfs
        server: nova.home.arpa
        path: /mnt/main/media/series
        globalMounts:
          - path: /data/tvshows
            readOnly: true
      transcodes:
        type: emptyDir
        globalMounts:
          - path: /config/transcodes
      cache:
        type: emptyDir
        globalMounts:
          - path: /config/cache
